plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.kobera.music.violin'
    compileSdk 33

    defaultConfig {
        applicationId "com.kobera.music.violin"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_19
        targetCompatibility JavaVersion.VERSION_19
    }
    kotlinOptions {
        jvmTarget = '19'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}


dependencies {
    implementation project(path: ':common')
    def composeBomVersion = "2023.03.00"
    /*
        COMPOSE DEPENDENCIES
    */
    implementation platform("androidx.compose:compose-bom:$composeBomVersion")

    implementation "com.google.accompanist:accompanist-systemuicontroller:0.30.0"

    implementation "androidx.navigation:navigation-compose:2.6.0-alpha08"

    def destinationsVersion = "1.8.38-beta"

    implementation "io.github.raamcosta.compose-destinations:core:$destinationsVersion"
    ksp "io.github.raamcosta.compose-destinations:ksp:$destinationsVersion"

    implementation 'androidx.core:core-ktx'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx'
    implementation 'androidx.activity:activity-compose'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.lifecycle:lifecycle-extensions'


    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.1'

    /*
        TEST DEPENDENCIES
     */
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform("androidx.compose:compose-bom:$composeBomVersion")
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    /*
        DEPENDENCY INJECTION - KOIN
     */
    def koin_version = "3.2.0"
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"


    /*
        LOGGING - TIMBER
     */
    implementation 'com.jakewharton.timber:timber:4.7.1'


    //Google play log in
    implementation 'com.google.android.gms:play-services-auth:20.4.1'

    runtimeOnly 'androidx.compose.material:material-icons-core:1.5.0-alpha01'


    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.2.3')


    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation 'com.google.accompanist:accompanist-permissions:0.30.0'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}